name: Create new realease
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install fuse and libfuse2
      run: sudo apt install fuse libfuse2

    - name: nwjs-ffmpeg-prebuilt
      run: |
        set -x
        nwjs_version=$(grep -o "nwjs-ffmpeg-prebuilt:.*" README.md | cut -d ' ' -f2)
        mkdir -p lib_extra/tmp/
        cd lib_extra/tmp/

        wget -q "https://github.com/nwjs-ffmpeg-prebuilt/nwjs-ffmpeg-prebuilt/releases/download/$nwjs_version/$nwjs_version-linux-x64.zip"
        unzip "$nwjs_version-linux-x64.zip"
        pwd; ls -lah

        mv libffmpeg.so ../
        cd ../
        rm -r tmp/
        pwd; ls -lah

    - name: WidevineCdm from chrome
      run: |
        set -x
        cd lib_extra/
        mkdir tmp2/
        cd tmp2/
        wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        pwd; ls -lah

        ar xv google-chrome-stable_current_amd64.deb
        tar xfv data.tar.xz
        mv opt/google/chrome/WidevineCdm/_platform_specific/linux_x64/libwidevinecdm.so ../
        cd ../
        pwd; ls -lah

        rm -r tmp2/
        chmod +x libwidevinecdm.so libffmpeg.so
        pwd; ls -lah

    - name: appimagetool
      run: |
        set -x
        mkdir tmp/
        mv lib_extra/ tmp/
        cd tmp/
        pwd; ls -lah

        wget -q https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage
        pwd; ls -lah

    - name: Opera
      run: |
        set -x
        opera_version=$(grep -o "Opera:.*" README.md | cut -d ' ' -f2)
        echo "opera_version: $opera_version"
        cd tmp/

        wget -q "https://deb.opera.com/opera-stable/pool/non-free/o/opera-stable/opera-stable_${opera_version}_amd64.deb"
        pwd; ls -lah

        ar xv *.deb
        tar xfv data.tar.xz

    - name: Make AppImage
      run: |
        set -x
        cd tmp/

        mkdir opera.AppDir/
        mv ../README.md opera.AppDir/
        mv lib_extra opera.AppDir/

        mv usr/lib/x86_64-linux-gnu/opera/ opera.AppDir/
        mv usr/share/icons/hicolor/256x256/apps/opera.png opera.AppDir/
        mv usr/share/doc/ opera.AppDir/

        mv usr/share/applications/opera.desktop opera.AppDir/
        sed -i -e '/TargetEnvironment/d' opera.AppDir/*.desktop

        cat >> opera.AppDir/AppRun << 'EOF'
        #!/bin/bash
        HERE="$(dirname "$(readlink -f "${0}")")"

        export UNION_PRELOAD="${HERE}"
        export LD_LIBRARY_PATH=/lib/:/lib64/:/lib/x86_64-linux-gnu/:/usr/lib/:"${HERE}"/lib_extra/:LD_LIBRARY_PATH

        exec "${HERE}"/opera "$@"
        EOF

        chmod +x opera.AppDir/AppRun
        ARCH=x86_64 ./appimagetool-x86_64.AppImage opera.AppDir/
        pwd; ls -lah

        opera_version=$(grep -o "Opera:.*" README.md | cut -d ' ' -f2)
        mv Opera*AppImage ../Opera-"$opera_version"-x86_64-1_JB.AppImage
        cd ../
        md5sum Opera-"$opera_version"-x86_64-1_JB.AppImage > Opera-"$opera_version"-x86_64-1_JB.AppImage.md5
        pwd; ls -lah

    - uses: xresloader/upload-to-github-release@main
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          file: "Opera*.AppImage; Opera*.md5"
          release_id: ${{ steps.create_release.outputs.id }}
          verbose: true
          draft: false
