name: Create new realease

on:
  push:
    branches:
      - "**"
    tags:
      - "!**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install fuse and libfuse2
      run: sudo apt install fuse libfuse2

    - name: nwjs-ffmpeg-prebuilt
      run: |
        set -x
        nwjs_version=$(grep -o "nwjs-ffmpeg-prebuilt:.*" README.md | cut -d ' ' -f2)
        #mkdir -p lib_extra/tmp/
        #cd lib_extra/tmp/

        mkdir tmp/
        cd tmp/

        wget -q "https://github.com/nwjs-ffmpeg-prebuilt/nwjs-ffmpeg-prebuilt/releases/download/$nwjs_version/$nwjs_version-linux-x64.zip"
        unzip "$nwjs_version-linux-x64.zip"
        pwd; ls -lah

        mv libffmpeg.so ../
        cd ../
        rm -r tmp/
        pwd; ls -lah

    - name: WidevineCdm from chrome
      run: |
        set -x
        #cd lib_extra/
        mkdir tmp2/
        cd tmp2/
        wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        pwd; ls -lah

        ar xv google-chrome-stable_current_amd64.deb
        tar xfv data.tar.xz
        mv opt/google/chrome/WidevineCdm/_platform_specific/linux_x64/libwidevinecdm.so ../
        cd ../
        pwd; ls -lah

        rm -r tmp2/
        chmod +x libwidevinecdm.so libffmpeg.so
        pwd; ls -lah

    - name: appimagetool
      run: |
        set -x
        pwd; ls -lah
        mkdir tmp/
        #mv lib_extra/ tmp/
        cd tmp/
        pwd; ls -lah

        #wget -q https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        version_go_appimage=$(wget -q -O - https://api.github.com/repos/probonopd/go-appimage/releases | grep "\"name.*appimagetool-.*-x86_64.AppImage\"" | head -n 1 | cut -d '-' -f2)
        echo "version_go_appimage: $version_go_appimage"
        wget -q "https://github.com/probonopd/go-appimage/releases/download/continuous/appimagetool-$version_go_appimage-x86_64.AppImage" -O appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage
        pwd; ls -lah

    - name: Opera
      run: |
        set -x
        opera_version=$(grep -o "Opera:.*" README.md | cut -d ' ' -f2)
        echo "opera_version: $opera_version"
        cd tmp/

        wget -q "https://deb.opera.com/opera-stable/pool/non-free/o/opera-stable/opera-stable_${opera_version}_amd64.deb"
        pwd; ls -lah

        ar xv *.deb
        tar xfv data.tar.xz
        pwd; ls -lah

    - name: Make AppImage
      run: |
        set -x
        cd tmp/

        mkdir opera.AppDir/
        mv ../README.md opera.AppDir/
        
        #mv lib_extra opera.AppDir/
        #mv libffmpeg.so libffmpeg.so.old

        cp ../libwidevinecdm.so opera.AppDir/
        cp ../libffmpeg.so opera.AppDir/
        pwd; ls -lah

        mv usr/lib/x86_64-linux-gnu/opera/* opera.AppDir/
        mv usr/share/icons/hicolor/256x256/apps/opera.png opera.AppDir/
        mv usr/share/doc/ opera.AppDir/

        mv usr/share/applications/opera.desktop opera.AppDir/
        sed -i -e '/TargetEnvironment/d' opera.AppDir/*.desktop

        cat >> opera.AppDir/AppRun << 'EOF'
        #!/bin/bash
        HERE="$(dirname "$(readlink -f "${0}")")"

        export UNION_PRELOAD="${HERE}"
        export LD_LIBRARY_PATH=/lib/:/lib64/:/lib/x86_64-linux-gnu/:/usr/lib/:"${HERE}"/lib_extra/:LD_LIBRARY_PATH

        exec "${HERE}"/opera "$@"
        EOF

        chmod +x opera.AppDir/AppRun

        opera_version=$(grep -o "Opera:.*" opera.AppDir/README.md | cut -d ' ' -f2)
        ARCH=x86_64 VERSION="${opera_version}-1_JB" ./appimagetool-x86_64.AppImage opera.AppDir/
        pwd; ls -lah

        mv Opera*.AppImage Opera*.zsync ../
        cd ../

        fileName=$(ls Opera*.AppImage)
        echo "fileName: $fileName"
        md5sum "$fileName" > "${fileName}.md5"
        pwd; ls -lah

    - uses: xresloader/upload-to-github-release@main
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          file: "Opera*.AppImage; Opera*.zsync; Opera*.md5"
          #delete_file: "random-name-*.txt;random-*.txt"
          release_id: ${{ steps.create_release.outputs.id }}
          #overwrite: true
          verbose: true
          #tags: true
          draft: false
          default_release_name: "Opera V + nwjs-ffmpeg-prebuilt V + Widevinecdm in AppImage"
