name: Create new realease
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: install fuse and libfuse2
      run: sudo apt install fuse libfuse2

    - name: nwjs-ffmpeg-prebuilt
      run: |
        set -x
        mkdir -p lib_extra/tmp/
        cd lib_extra/tmp/

        wget $(wget -q https://api.github.com/repos/nwjs-ffmpeg-prebuilt/nwjs-ffmpeg-prebuilt/releases/latest -O - | grep browser_download_url | grep -i linux | grep -i 64 | cut -d '"' -f 4 | head -1)
        unzip *.zip

        cd ../
        mv ./tmp/libffmpeg.so ./libffmpeg.so

    - name: WidevineCdm
      run: |
        set -x

        cd lib_extra/
        mkdir tmp2/
        cd tmp2/

        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        ar x *.deb
        tar xf data.tar.xz
        cd ../
        mv tmp2/opt/google/chrome/WidevineCdm/_platform_specific/linux_x64/libwidevinecdm.so libwidevinecdm.so

        rm -R -f tmp*
        chmod a+x *.so

    - name: appimagetool
      run: |
        set -x

        mkdir tmp/
        cp -r lib_extra/ tmp/
        cd tmp/

        wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage

    - name: opera
      run: |
        set -x
        cd tmp/

        version_deb=$(wget -q https://deb.opera.com/opera-stable/pool/non-free/o/opera-stable/ -O - | grep deb | tail -1 | grep -o -P '(?<=.deb">).*(?=</a>)')
        wget "https://deb.opera.com/opera-stable/pool/non-free/o/opera-stable/$version_deb"

    - name: Make AppImage
      run: |
        set -x
        cd tmp/

        ar x *.deb
        tar xf data.tar.xz
        mkdir opera.AppDir
        mv usr/lib/x86_64-linux-gnu/opera/* opera.AppDir/
        mv usr/share/applications/*.desktop opera.AppDir/
        sed -i -e '/TargetEnvironment/d' opera.AppDir/*.desktop
        mv usr/share/pixmaps/* opera.AppDir/
        tar xf control.tar.xz
        VERSION=$(cat control | grep -i version | cut -c 10-)
        
        cat >> opera.AppDir/AppRun << 'EOF'
        #!/bin/bash
        HERE="$(dirname "$(readlink -f "${0}")")"
        export UNION_PRELOAD="${HERE}"
        export LD_LIBRARY_PATH=/lib/:/lib64/:/lib/x86_64-linux-gnu/:/usr/lib/:"${HERE}"/lib_extra/:LD_LIBRARY_PATH
        exec "${HERE}"/opera "$@"
        EOF

        chmod +x opera.AppDir/AppRun
        mv lib_extra opera.AppDir/

        ARCH=x86_64 ./appimagetool-x86_64.AppImage -n opera.AppDir/

        pwd
        ls -lah
        cd ..
        mv tmp/*AppImage Opera-"$VERSION"-x86_64.AppImage

    # Build - Error: Resource not accessible by integration
    # Change Settings -> Actions -> General -> Workflow Permissions to allow read and write:
    # https://github.com/actions/first-interaction/issues/10#issuecomment-1506118886

    # https://github.com/marketplace/actions/upload-to-github-release
    - uses: xresloader/upload-to-github-release@main
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          file: "Opera*.AppImage; Opera*.md5"
          #delete_file: "random-name-*.txt;random-*.txt"
          release_id: ${{ steps.create_release.outputs.id }}
          #overwrite: true
          verbose: true
          #tags: true
          draft: false
